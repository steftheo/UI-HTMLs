//
// Mixins
// --------------------------------------------------

// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}
	&:after {
		clear: both;
	}
}

// Webkit-style focus
.tab-focus() {
	// Default
	outline: thin dotted;
	// Webkit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

// Center-align a block level element
.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Sizing shortcuts
.size(@width; @height) {
	width: @width;
	height: @height;
}

.square(@size) {
	.size(@size; @size);
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
	&:-moz-placeholder            { color: @color; } // Firefox 4-18
	&::-moz-placeholder           { color: @color;   // Firefox 19+
		opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
		&:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
		&::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
		&.placeholder                 { color: @color; } // Fallback
	}

	.placeholder-height(@height) {
		&:-moz-placeholder {
			line-height: @height;
		}
		&::-webkit-input-placeholder {
			line-height: @height;
		}
		&.placeholder {
			line-height: @height;
		}
	}

	// Text overflow
	// Requires inline-block or block for proper styling
	.text-overflow() {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	// CSS image replacement
	.text-hide() {
		font: ~"0/0" a;
		color: transparent;
		text-shadow: none;
		background-color: transparent;
		border: 0;
	}

	// CSS3 PROPERTIES
	// --------------------------------------------------

	.mask(@arguments) {
		-webkit-mask: @arguments;
		mask: @arguments;
	}

	// Single side border-radius
	.border-top-radius(@radius) {
		border-top-right-radius: @radius;
		border-top-left-radius: @radius;
	}
	.border-right-radius(@radius) {
		border-bottom-right-radius: @radius;
		border-top-right-radius: @radius;
	}
	.border-bottom-radius(@radius) {
		border-bottom-right-radius: @radius;
		border-bottom-left-radius: @radius;
	}
	.border-left-radius(@radius) {
		border-bottom-left-radius: @radius;
		border-top-left-radius: @radius;
	}

	// Drop shadows
	.box-shadow(@shadow) {
		-webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
		box-shadow: @shadow;
	}

	// Transitions
	.transition(@transition) {
		-webkit-transition: @transition;
		transition: @transition;
	}
	.transition-property(@transition-property) {
		-webkit-transition-property: @transition-property;
		transition-property: @transition-property;
	}
	.transition-delay(@transition-delay) {
		-webkit-transition-delay: @transition-delay;
		transition-delay: @transition-delay;
	}
	.transition-duration(@transition-duration) {
		-webkit-transition-duration: @transition-duration;
		transition-duration: @transition-duration;
	}
	.transition-transform(@transition) {
		-webkit-transition: -webkit-transform @transition;
		-moz-transition: -moz-transform @transition;
		-o-transition: -o-transform @transition;
		transition: transform @transition;
	}

	// Transformations
	.rotate(@degrees) {
		-webkit-transform: rotate(@degrees);
		-ms-transform: rotate(@degrees); // IE9+
		transform: rotate(@degrees);
	}
	.scale(@ratio; @ratio-y...) {
		-webkit-transform: scale(@ratio, @ratio-y);
		-ms-transform: scale(@ratio, @ratio-y); // IE9 only
		transform: scale(@ratio, @ratio-y);
	}
	.translate(@x; @y) {
		-webkit-transform: translate(@x, @y);
		-ms-transform: translate(@x, @y); // IE9+
		transform: translate(@x, @y);
	}
	.skew(@x; @y) {
		-webkit-transform: skew(@x, @y);
		-ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
		transform: skew(@x, @y);
	}
	.translate3d(@x; @y; @z) {
		-webkit-transform: translate3d(@x, @y, @z);
		transform: translate3d(@x, @y, @z);
	}

	.rotateX(@degrees) {
		-webkit-transform: rotateX(@degrees);
		-ms-transform: rotateX(@degrees); // IE9+
		transform: rotateX(@degrees);
	}
	.rotateY(@degrees) {
		-webkit-transform: rotateY(@degrees);
		-ms-transform: rotateY(@degrees); // IE9+
		transform: rotateY(@degrees);
	}
	.perspective(@perspective) {
		-webkit-perspective: @perspective;
		-moz-perspective: @perspective;
		perspective: @perspective;
	}
	.perspective-origin(@perspective) {
		-webkit-perspective-origin: @perspective;
		-moz-perspective-origin: @perspective;
		perspective-origin: @perspective;
	}
	.transform-origin(@origin) {
		-webkit-transform-origin: @origin;
		-moz-transform-origin: @origin;
		-ms-transform-origin: @origin; // IE9 only
		transform-origin: @origin;
	}

	// Animations
	.animation(@animation) {
		-webkit-animation: @animation;
		animation: @animation;
	}
	.animation-name(@name) {
		-webkit-animation-name: @name;
		animation-name: @name;
	}
	.animation-duration(@duration) {
		-webkit-animation-duration: @duration;
		animation-duration: @duration;
	}
	.animation-timing-function(@timing-function) {
		-webkit-animation-timing-function: @timing-function;
		animation-timing-function: @timing-function;
	}
	.animation-delay(@delay) {
		-webkit-animation-delay: @delay;
		animation-delay: @delay;
	}
	.animation-iteration-count(@iteration-count) {
		-webkit-animation-iteration-count: @iteration-count;
		animation-iteration-count: @iteration-count;
	}
	.animation-direction(@direction) {
		-webkit-animation-direction: @direction;
		animation-direction: @direction;
	}


	// Backface visibility
	// Prevent browsers from flickering when using CSS 3D transforms.
	// Default value is `visible`, but can be changed to `hidden`
	// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
	.backface-visibility(@visibility){
		-webkit-backface-visibility: @visibility;
		-moz-backface-visibility: @visibility;
		backface-visibility: @visibility;
	}

	// Background clip
	.background-clip(@clip: border-box) {
		-webkit-background-clip: @clip;
		-moz-background-clip: @clip;
		background-clip: @clip;
	}

	// Box sizing
	.box-sizing(@boxmodel) {
		-webkit-box-sizing: @boxmodel;
		-moz-box-sizing: @boxmodel;
		box-sizing: @boxmodel;
	}

	// User select
	// For selecting text on the page
	.user-select(@select) {
		-webkit-user-select: @select;
		-moz-user-select: @select;
		-ms-user-select: @select; // IE10+
		-o-user-select: @select;
		user-select: @select;
	}

	// Resize anything
	.resizable(@direction) {
		resize: @direction; // Options: horizontal, vertical, both
		overflow: auto; // Safari fix
	}

	// CSS3 Content Columns
	.content-columns(@column-count; @column-gap: @grid-gutter-width) {
		-webkit-column-count: @column-count;
		-moz-column-count: @column-count;
		column-count: @column-count;
		-webkit-column-gap: @column-gap;
		-moz-column-gap: @column-gap;
		column-gap: @column-gap;
	}

	// Optional hyphenation
	.hyphens(@mode: auto) {
		word-wrap: break-word;
		-webkit-hyphens: @mode;
		-moz-hyphens: @mode;
		-ms-hyphens: @mode; // IE10+
		-o-hyphens: @mode;
		hyphens: @mode;
	}

	// Opacity
	.opacity(@opacity) {
		opacity: @opacity;
		// IE8 filter
		@opacity-ie: (@opacity * 100);
		filter: ~"alpha(opacity=@{opacity-ie})";
	}

	// GRADIENTS
	// --------------------------------------------------

	#gradient {

		// Horizontal gradient, from left to right
		//
		// Creates two color stops, start and end, by specifying a color and position for each color stop.
		// Color stops are not available in IE9 and below.
		.horizontal(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {
			background-image: -webkit-linear-gradient(left, color-stop(@start-color @start-percent), color-stop(@end-color @end-percent)); // Safari 5.1-6, Chrome 10+
			background-image:  linear-gradient(to right, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
			background-repeat: repeat-x;
			filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down
		}

		// Vertical gradient, from top to bottom
		//
		// Creates two color stops, start and end, by specifying a color and position for each color stop.
		// Color stops are not available in IE9 and below.
		.vertical(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {
			background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Safari 5.1-6, Chrome 10+
			background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
			background-repeat: repeat-x;
			filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down
		}

		.directional(@start-color: #555; @end-color: #333; @deg: 45deg) {
			background-repeat: repeat-x;
			background-image: -webkit-linear-gradient(@deg, @start-color, @end-color); // Safari 5.1-6, Chrome 10+
			background-image: linear-gradient(@deg, @start-color, @end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
		}
		.horizontal-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {
			background-image: -webkit-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);
			background-image: linear-gradient(to right, @start-color, @mid-color @color-stop, @end-color);
			background-repeat: no-repeat;
			filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback
		}
		.vertical-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {
			background-image: -webkit-linear-gradient(@start-color, @mid-color @color-stop, @end-color);
			background-image: linear-gradient(@start-color, @mid-color @color-stop, @end-color);
			background-repeat: no-repeat;
			filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback
		}
		.radial(@inner-color: #555; @outer-color: #333) {
			background-image: -webkit-radial-gradient(circle, @inner-color, @outer-color);
			background-image: radial-gradient(circle, @inner-color, @outer-color);
			background-repeat: no-repeat;
		}
		.striped(@color: rgba(255,255,255,.15); @angle: 45deg) {
			background-image: -webkit-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);
			background-image: linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);
		}
	}

	// Reset filters for IE
	//
	// When you need to remove a gradient background, do not forget to use this to reset
	// the IE filter for IE9 and below.
	.reset-filter() {
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
	}


	// Retina images
	//
	// Short retina mixin for setting background-image and -size

	.img-retina(@file-1x; @file-2x; @width-1x; @height-1x) {
		background-image: url("@{file-1x}");

		@media
		only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (   min--moz-device-pixel-ratio: 2),
		only screen and (     -o-min-device-pixel-ratio: 2/1),
		only screen and (        min-device-pixel-ratio: 2),
		only screen and (                min-resolution: 192dpi),
		only screen and (                min-resolution: 2dppx) {
			background-image: url("@{file-2x}");
			background-size: @width-1x @height-1x;
		}
	}


	// Responsive image
	//
	// Keep images from scaling beyond the width of their parents.

	.img-responsive(@display: block;) {
		display: @display;
		max-width: 100%; // Part 1: Set a maximum relative to the parent
		height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
	}

	// Responsive utilities
	// -------------------------
	// More easily include all the states for responsive-utilities.less.
	.responsive-visibility() {
		display: block !important;
		tr& { display: table-row !important; }
		th&,
		td& { display: table-cell !important; }
	}

	.responsive-invisibility() {
		&,
		tr&,
		th&,
		td& { display: none !important; }
	}

	// COMPONENT MIXINS
	// --------------------------------------------------

	// Color swatches grid
	.calc-color(@first-color, @second-color) {
		.palette-@{first-color} {
			background-color: ~"@{@{first-color}}";
		}
		.palette-@{second-color} {
			background-color: ~"@{@{second-color}}";
		}
	}

	// Color swatches grid
	.calc-color-shade(@first-color) {
		.palette-@{first-color} {
			background-color: ~"@{@{first-color}}";
		}
	}

	// Dropdown arrow
	// -------------------------
	.dropdown-arrow(@color: @brand-primary; @top: 5px; @left: 15px; @size: 9px) {
		&:before {
			content: "";
			border-style: solid;
			border-width: 0 @size @size @size;
			border-color: transparent transparent @color transparent;
			height: 0;
			position: absolute;
			left: @left;
			top: @top;
			width: 0;
			// Make corners smooth
			-webkit-transform: rotate(360deg);
		}
	}

	// Button variants
	// -------------------------
	// Easily pump out default styles, as well as :hover, :focus, :active,
	// and disabled options for all buttons
	.button-variant(@color; @background; @hover-background; @active-background; @disabled-background) {
		color: @color;
		background-color: @background;

		&:hover,
		&:focus,
		&:active,
		&.active,
		&.hover {
			color: @color;
			background-color: @hover-background;
			border-color: @hover-background;
		}
		&:active,
		&.active {
			background: @active-background;
			border-color: @active-background;
		}
		&.disabled,
		&[disabled],
		fieldset[disabled] & {
			&,
			&:hover,
			&:focus,
			&:active,
			&.active {
				background-color: @disabled-background;
				border-color: @disabled-background;
			}
		}
	}

	.button-variant-embossed(@primary-color; @secondary-color) {
		.box-shadow(0 5px @secondary-color);
		&:hover,
		&:focus {
			.box-shadow(0 3px @secondary-color);
			background: @primary-color;
		}
		&.active,
		&:active {
			.box-shadow(0 0 @secondary-color);
			top: 5px;
			background: @primary-color;
			border-color: @primary-color;
		}
	}

	.button-variant-stoke(@color; @border; @hover-border; @active-background; @active-border; @disabled-background; @disabled-border) {
		color: @color;
		background-color: white;
		border-color: @border;

		&:hover,
		&:focus,
		&:active,
		&.active {
			color: @color;
			background-color: white;
			border-color: @hover-border;
		}
		&:active,
		&.active {
			background: @active-background;
			border-color: @active-border;
			color: white;
		}
		&.disabled,
		&[disabled],
		fieldset[disabled] & {
			&,
			&:hover,
			&:focus,
			&:active,
			&.active {
				background-color: @disabled-background;
				border-color: @disabled-border;
			}
		}
	}

	// Button sizes
	// -------------------------
	.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
		padding: @padding-vertical @padding-horizontal;
		font-size: @font-size;
		line-height: @line-height;
		border-radius: @border-radius;
	}

	// Form validation states
	//
	// Used in forms.less to generate the form validation CSS for warnings, errors,
	// and successes.

	.form-control-validation(@text-color: @brand-primary; @border-color: @gray-light; @background-color: @inverse) {
		// Color the label and help text
		.help-block,
		.control-label,
		.radio,
		.checkbox,
		.radio-inline,
		.checkbox-inline {
			color: @the-black-flag;
		}

		// Set the border and box shadow on specific inputs to match
		.form-control {
			border-color: @border-color;
			.box-shadow(none);
			&:focus {
				border-color: @border-color;
				.box-shadow(none);
			}
		}
		// Set validation states also for addons
		.input-group-addon {
			border-color: @border-color;
			background-color: @background-color;
		}
	}

	// Form control focus state
	//
	// Generate a customized focus state and for any input with the specified color,
	// which defaults to the `@input-focus-border` variable.
	//
	// We highly encourage you to not customize the default value, but instead use
	// this to tweak colors on an as-needed basis. This aesthetic change is based on
	// WebKit's default styles, but applicable to a wider range of browsers. Its
	// usability and accessibility should be taken into account with any change.
	//
	// Example usage: change the default blue border and shadow to white for better
	// contrast against a dark gray background.

	.form-control-focus(@color: @lagoon) {
		.form-group.focus &,
		&:focus {
			border-color: @color;
			outline: 0;
			.box-shadow(none);
		}
	}

	// Form control sizing
	//
	// Relative text size, padding, and border-radii changes for form controls. For
	// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
	// element gets special love because it's special, and that's a fact!

	.input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius: @border-radius-large) {
		height: @input-height;
		padding: @padding-vertical @padding-horizontal;
		font-size: @font-size;
		line-height: @line-height;
		border-radius: @border-radius;

		select& {
			height: @input-height;
			line-height: @input-height;
		}

		textarea&,
		select[multiple]& {
			height: auto;
		}
	}

	// Pagination
	// -------------------------
	.pagination-size(@padding-vertical; @padding-horizontal; @font-size; @border-radius) {
		> li {
			> a,
			> span {
				padding: @padding-vertical @padding-horizontal;
				font-size: @font-size;
			}
			&:first-child {
				> a,
				> span {
					.border-left-radius(@border-radius);
				}
			}
			&:last-child {
				> a,
				> span {
					.border-right-radius(@border-radius);
				}
			}
		}
	}

	// Labels
	// -------------------------
	.label-variant(@color) {
		background-color: @color;
		&[href] {
			&:hover,
			&:focus {
				background-color: darken(@color, 10%);
			}
		}
	}

	// Alerts
	// -------------------------
	.alert-variant(@background; @text-color) {
		background-color: fade(@background, 20%);
		color: @text-color;

		.alert-link {
			color: darken(@text-color, 10%);
		}

		.close {
			color: @background;
		}
	}

	// Panels
	// -------------------------
	.panel-variant(@border; @heading-text-color; @heading-bg-color; @heading-border) {
		border-color: fade(@border, 20%);

		& > .panel-heading {
			color: @heading-text-color;
			background-color: fade(@heading-bg-color, 20%);
			border-color: fade(@heading-border, 20%);

			+ .panel-collapse .panel-body {
				border-top-color: @border;
			}
		}
		& > .panel-footer {
			+ .panel-collapse .panel-body {
				border-bottom-color: @border;
			}
		}
	}

	// List Groups
	// -------------------------
	.list-group-item-variant(@state; @background; @color) {
		.list-group-item-@{state} {
			color: @color;
			background-color: fade(@background, 20%);

			a& {
				color: @color;

				.list-group-item-heading { color: inherit; }

				&:hover,
				&:focus {
					color: @color;
					background-color: fade(@background, 30%);
				}
				&.active,
				&.active:hover,
				&.active:focus {
					color: #fff;
					background-color: @color;
					border-color: @color;
				}
			}
		}
	}

	.toogle-generator(@switch-width, @switch-offset, @background1, @background2, @background3) {

		&+ label {
			padding: 2px;
			width: @switch-width;
			height: ceil(@switch-width/1.67);
			background-color: @cutlass;
			border-radius: 60px;
			.transition(background 0.4s);

			&:before,
			&:after {
				display: block;
				position: absolute;
				content: "";
			}

			&:before {
				top: 2px;
				left: 2px;
				bottom: 2px;
				right: 2px;
				background-color: @background1;
				border-radius: 60px;
				.transition(background 0.4s);
			}

			&:after {
				top: @switch-offset;
				left: @switch-offset;
				bottom: @switch-offset;
				width: ceil(@switch-width/1.67)-(@switch-offset*2);
				background-color: @background2;
				border-radius: 52px;
				transition: margin 0.4s, background 0.4s;
			}
		}

		&:checked + label {
			background-color: @lagoon;

			&:after {
				margin-left: round(@switch-width/3) + 3;
				background-color: @background3;
			}
		}

	}

	.btn-embossed-dropdown(@color1, @color2) {
		box-shadow: none;
		top: 5px;
		background: @color1;
		border-color: @color1;
		border-left: 1px solid @color2;
	}
